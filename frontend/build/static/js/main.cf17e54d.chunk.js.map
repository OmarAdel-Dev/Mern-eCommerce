{"version":3,"sources":["components/Header/Header.jsx","actions/userActions.js","components/Footer/Footer.jsx","components/Product/Product.jsx","screens/HomeScreen/HomeScreen.jsx","actions/productActions.js","screens/ProductScreen/ProductScreen.jsx","actions/cartActions.js","screens/CartScreen/CartScreen.jsx","screens/LoginScreen/LoginScreen.jsx","screens/RegisterScreen/RegisterScreen.jsx","screens/ProfileScreen/ProfileScreen.jsx","components/CheckoutSteps/CheckoutSteps.jsx","screens/ShippingScreen/ShippingScreen.jsx","screens/PaymentScreen/PaymentScreen.jsx","screens/PlaceorderScreen/PlaceorderScreen.jsx","actions/orderActions.js","utils/ProtectedRoute.js","App.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","reducers/userReducers.js","serviceWorker.js","index.js"],"names":["Header","Layout","SubMenu","Menu","history","useHistory","useState","searchField","setSearchField","selectedKey","setSelectedKey","userInfo","useSelector","state","userLogin","dispatch","useDispatch","logoutHandler","a","localStorage","removeItem","type","push","className","theme","to","onClick","src","alt","mode","e","key","selectedKeys","Item","icon","ShoppingCartOutlined","UserOutlined","title","name","ProfileOutlined","LogoutOutlined","LoginOutlined","SearchOutlined","placeholder","CloseCircleOutlined","Footer","style","zIndex","textAlign","Product","product","Meta","Card","image","category","price","rating","_id","hoverable","width","height","cover","allowHalf","defaultValue","disabled","HomeScreen","productList","loading","error","products","console","log","useEffect","axios","get","data","payload","response","msg","size","tip","message","showIcon","map","ProductScreen","match","qty","setQty","productDetails","id","params","HomeOutlined","countInStock","description","numReviews","HeartTwoTone","twoToneColor","min","max","value","onChange","PlusOutlined","addCartItem","getState","setItem","JSON","stringify","cart","cartItems","CartScreen","location","productId","search","split","bordered","itemLayout","dataSource","locale","emptyText","renderItem","item","avatar","shape","danger","DeleteOutlined","length","content","duration","LoginScreen","email","setEmail","password","setPassword","redirect","success","onFinish","config","headers","post","rules","required","prefix","target","Password","LockOutlined","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","href","htmlType","RegisterScreen","setName","confirmPassword","setConfirmPassword","userRegister","MailOutlined","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","ProfileScreen","isSubmit","setIsSubmit","user","userDetails","stateUpdate","userUpdateProfile","userUpdatedInfo","Authorization","token","put","updateUserDetails","CheckoutSteps","current","Step","Steps","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","initialValues","paymentMethod","setPaymentMethod","radioStyle","display","lineHeight","Group","PlaceorderScreen","Column","Table","ColumnGroup","order","addDecimals","num","toFixed","itemsPrice","reduce","total","shippingPrice","taxPrice","Number","totalPrice","field","placeOrderHandler","createOrder","orderItems","flex","header","pagination","footer","dataIndex","ProtectedRoute","Component","component","path","rest","pathToBeRedirected","toString","slice","render","props","pathname","from","App","exact","PaymentScreen","reducer","combineReducers","action","reviews","tempItem","existItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cf17e54d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Header.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { userLogout } from \"../../actions/userActions\"\r\nimport { Menu, Layout, Input } from \"antd\";\r\nimport {\r\n  ShoppingCartOutlined,\r\n  LoginOutlined,\r\n  SearchOutlined,\r\n  CloseCircleOutlined,\r\n  UserOutlined,\r\n  ProfileOutlined,\r\n  LogoutOutlined\r\n} from \"@ant-design/icons\";\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const { Header } = Layout;\r\n  const { SubMenu } = Menu;\r\n\r\n  let history = useHistory()\r\n\r\n  const [searchField, setSearchField] = useState(false);\r\n  const [selectedKey, setSelectedKey] = useState(null);\r\n\r\n  const state = useSelector(state => state.userLogin)\r\n  const { userInfo } = state\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(userLogout())\r\n    history.push(\"/\")\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header className=\"header\" theme=\"light\">\r\n        <Link to=\"/\">\r\n          <div\r\n            className=\"logo\"\r\n            onClick={() => {\r\n              setSelectedKey(null);\r\n            }}\r\n          >\r\n            <img src=\"/logo.png\" alt=\"ProShop logo\"/>\r\n            <span>PROSHOP</span>\r\n          </div>\r\n        </Link>\r\n        <Menu\r\n          className=\"navbar-items\"\r\n          theme=\"light\"\r\n          mode=\"horizontal\"\r\n          onClick={(e) => {\r\n            setSelectedKey(e.key);\r\n          }}\r\n          selectedKeys={[selectedKey]}\r\n        >\r\n          <Menu.Item\r\n            className=\"navbar-item\"\r\n            key=\"cart\"\r\n            icon={<ShoppingCartOutlined />}\r\n          >\r\n            <Link to=\"/cart\">Cart</Link>\r\n          </Menu.Item>\r\n\r\n          {\r\n            userInfo ?\r\n              <SubMenu\r\n                key=\"SubMenu\"\r\n                icon={<UserOutlined />}\r\n                title={userInfo.name}\r\n              >\r\n                <Menu.Item key=\"setting:1\" icon={<ProfileOutlined />}><Link to=\"/profile\">Profile</Link></Menu.Item>\r\n                <Menu.Item key=\"setting:2\" icon={<LogoutOutlined />} onClick={() => logoutHandler()}>Logout</Menu.Item>\r\n              </SubMenu>\r\n              : <Menu.Item\r\n                className=\"navbar-item\"\r\n                key=\"login\"\r\n                icon={<LoginOutlined />}\r\n              >\r\n                <Link to=\"/login\">Sign In</Link>\r\n              </Menu.Item>\r\n          }\r\n\r\n          <Menu.Item\r\n            className=\"navbar-item\"\r\n            icon={<SearchOutlined />}\r\n            onClick={() => {\r\n              setSearchField(!searchField);\r\n            }}\r\n          ></Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n\r\n      <div className={`search-field ${searchField ? \"appear\" : \"disappear\"}`}>\r\n        <Input placeholder=\"Search...\" />\r\n        <CloseCircleOutlined\r\n          onClick={() => {\r\n            setSearchField(false);\r\n            setSelectedKey(null);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nexport const userLogin = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"USER_LOGIN_REQUEST\" });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: \"USER_LOGIN_SUCCESS\", payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"USER_LOGIN_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.msg\r\n          ? error.response.data.msg\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userLogout = () => async (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: \"USER_LOGOUT\" });\r\n};\r\n\r\nexport const userRegister = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"USER_REGISTER_REQUEST\" });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: \"USER_REGISTER_SUCCESS\", payload: data });\r\n\r\n    dispatch({ type: \"USER_LOGIN_SUCCESS\", payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"USER_REGISTER_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.msg\r\n          ? error.response.data.msg\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    console.log(\"here\");\r\n    dispatch({ type: \"USER_DETAILS_REQUEST\" });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: \"USER_DETAILS_SUCCESS\", payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"USER_DETAILS_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.msg\r\n          ? error.response.data.msg\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserDetails = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: \"USER_UPDATE_REQUEST\" });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({ type: \"USER_UPDATE_SUCCESS\", payload: data });\r\n\r\n    dispatch({ type: \"USER_LOGIN_SUCCESS\", payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"USER_UPDATE_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.msg\r\n          ? error.response.data.msg\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n","import React, { Fragment } from 'react'\r\nimport { Layout } from \"antd\"\r\n\r\nconst Footer = () => {\r\n\r\n    const { Footer } = Layout;\r\n\r\n    return (\r\n        <div  className=\"\" style={{zIndex: '1'}}>\r\n            <Footer style={{ textAlign: 'center' }}>Copyright ©2020 All rights reserved</Footer>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Product.scss\";\r\nimport { Card, Rate } from \"antd\";\r\n\r\nconst Product = ({ product }) => {\r\n  const { Meta } = Card;\r\n\r\n  const { name, image, category, price, rating, _id } = product;\r\n\r\n  return (\r\n    <Link to={`/product/${_id}`}>\r\n      <Card\r\n        hoverable\r\n        style={{ width: 240 ,height: 360}}\r\n        cover={<img alt=\"example\" src={image} />}\r\n      >\r\n        <Meta title={category} />\r\n        <Meta className=\"product-item-name\" title={name} />\r\n        <Meta className=\"product-item-price\" title={`$${price}`} />\r\n        <Rate allowHalf defaultValue={rating} disabled />\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Product from \"../../components/Product/Product\";\r\nimport \"./HomeScreen.scss\";\r\nimport { productsList } from '../../actions/productActions'\r\nimport { Alert, Spin } from 'antd';\r\n\r\nconst HomeScreen = () => {\r\n\r\n  const productList = useSelector(state => state.productList);\r\n  const { loading, error, products } = productList;\r\n  // debugger;\r\n  const dispatch = useDispatch()\r\n  console.log(productList)\r\n  useEffect(() => {\r\n    dispatch(productsList())\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"latest-products\">\r\n      <h2>\r\n        Latest <span>Products</span>\r\n      </h2>\r\n      <div className=\"products-container\">\r\n        {loading ?\r\n          <Spin size=\"large\" tip=\"Loading...\" />\r\n          :\r\n           error ? <Alert message={error} type=\"error\" showIcon /> :\r\n            products.map((product) => (\r\n              <Product product={product} />\r\n            ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import axios from \"axios\";\r\n\r\nexport const productsList = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"PRODUCT_LIST_REQUEST\" });\r\n    const { data } = await axios.get(`/api/products`);\r\n    dispatch({ type: \"PRODUCT_LIST_SUCCESS\", payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"PRODUCT_LIST_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.msg\r\n          ? error.response.data.msg\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const productDetials = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"PRODUCT_DETAILS_REQUEST\" });\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    dispatch({ type: \"PRODUCT_DETAILS_SUCCESS\", payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"PRODUCT_DETAILS_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.msg\r\n          ? error.response.data.msg\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, history } from \"react-router-dom\";\r\nimport \"./ProductScreen.scss\";\r\nimport { Button, InputNumber, Rate, Breadcrumb, Spin, Alert } from \"antd\";\r\nimport { PlusOutlined, HomeOutlined, HeartTwoTone } from \"@ant-design/icons\";\r\nimport { productDetials } from '../../actions/productActions'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const productDetails = useSelector(state => state.productDetails)\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(productDetials(match.params.id))\r\n    // eslint-disable-next-line\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  console.log(loading)\r\n\r\n  return (\r\n    <div className=\"product-screen\">\r\n\r\n      {loading?\r\n        <Spin size=\"large\" tip=\"Loading...\" />\r\n        : error ? <Alert message={error} type=\"error\" showIcon /> :\r\n          <>\r\n            <Breadcrumb>\r\n              <Link to=\"/\">\r\n                <Breadcrumb.Item>\r\n                  <HomeOutlined />\r\n                  <span>Home</span>\r\n                </Breadcrumb.Item>\r\n              </Link>\r\n              <Breadcrumb.Item>Products</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"product-container\">\r\n              <div className=\"product-image\">\r\n                <img src={product.image} />\r\n              </div>\r\n              <div className=\"product-details\">\r\n                <h2>{product.name}</h2>\r\n                <h1>${product.price}</h1>\r\n                <ul className=\"product-info\">\r\n                  <li className=\"product-info-item\">Category: {product.category}</li>\r\n                  <li className=\"product-info-item\">\r\n                    Availibility:{\" \"}\r\n                    {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                  </li>\r\n                </ul>\r\n                <p>{product.description}</p>\r\n                <div className=\"rate\">\r\n                  <Rate allowHalf defaultValue={product.rating} disabled />\r\n                  <span>{product.numReviews} Reviews</span>\r\n                  <Button\r\n                    type=\"ghost\"\r\n                    icon={<HeartTwoTone twoToneColor=\"#FF8920\" />}\r\n                    size=\"middle\"\r\n                  />\r\n                </div>\r\n                <div className=\"d-flex row add-to-cart\">\r\n                  {product.countInStock > 0 &&\r\n                    <>\r\n                      <span>Quantity:</span>\r\n                      <InputNumber min={0} max={product.countInStock} defaultValue={0} value={qty} onChange={setQty} />\r\n                    </>}\r\n                  <Button\r\n                    className=\"add-to-cart-btn\"\r\n                    type=\"primary\"\r\n                    icon={<PlusOutlined />}\r\n                    size=\"middle\"\r\n                    disabled={product.countInStock === 0}\r\n                    onClick={addToCartHandler}\r\n                  >\r\n                    Add to cart\r\n            </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from \"axios\";\r\n\r\nexport const addCartItem = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: \"CART_ADD_ITEM\",\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeCartItem = (id) => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: \"CART_REMOVE_ITEM\",\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: \"CART_SAVE_SHIPPING_ADDRESS\",\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: \"CART_SAVE_PAYMENT_METHOD\",\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"paymentMehtod\", JSON.stringify(data));\r\n};\r\n","\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addCartItem, removeCartItem } from \"../../actions/cartActions\"\r\nimport { List, Avatar, Button, InputNumber, Empty, message } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nimport \"./CartScreen.scss\"\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n\r\n    const productId = match.params.id;\r\n\r\n    const qty = location.search ? location.search.split(\"=\")[1] : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const state = useSelector(state => state.cart);\r\n    const { cartItems } = state;\r\n\r\n    console.log(cartItems)\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addCartItem(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const proceedToCheckoutHandler = () => {\r\n        if(cartItems.length === 0)\r\n            message.error({ content: \"Can't proceed to checkout with no cart items\", duration: 2 });\r\n        else\r\n            history.push('/shipping')\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"cart-screen\">\r\n            <List\r\n                className=\"cartlist\"\r\n                bordered\r\n                itemLayout=\"horizontal\"\r\n                dataSource={cartItems}\r\n                locale={{\r\n                    emptyText: <Empty description={\r\n                        <span>\r\n                            No Cart Items\r\n                        </span>\r\n                    } />\r\n                }}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            avatar={<Avatar shape=\"square\" size={128} src={item.image} />}\r\n                            title={item.name}\r\n                        />\r\n                        <div className=\"cartlist-item\">\r\n                            <InputNumber min={1} max={item.countInStock} value={item.qty} onChange={(value) => dispatch(addCartItem(item.product, value))} />\r\n                            <p>price:{item.price}</p>\r\n                            <Button danger icon={<DeleteOutlined />} onClick={() => dispatch(removeCartItem(item.product))}>Delete</Button>\r\n                        </div>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n            <Button className=\"proceed-button\" type=\"primary\" onClick={proceedToCheckoutHandler}>Proceed to checkout</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { userLogin } from '../../actions/userActions'\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, LockOutlined, EyeTwoTone, EyeInvisibleOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport \"./LoginScreen.scss\"\r\nimport { Link } from 'react-router-dom';\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"\r\n\r\n    const state = useSelector(state => state.userLogin);\r\n    const { userInfo, loading, error } = state;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const key = 'updatable'\r\n\r\n    useEffect(() => {\r\n        if (userInfo)\r\n            history.push(redirect);\r\n\r\n    }, [history, userInfo])\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(loading)\r\n        if (loading)\r\n            message.loading(\"Logging in...\", key)\r\n        else if (loading === false && userInfo)\r\n            message.success({ content: 'Welcome to ProShop!', key, duration: 2 });\r\n        else if (loading === false && error)\r\n            message.error({ content: error, key, duration: 2 });\r\n\r\n    }, [loading])\r\n\r\n    const onFinish = () => {\r\n        dispatch(userLogin(email, password))\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Email!',\r\n                    },\r\n                ]}\r\n\r\n            >\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item>\r\n\r\n                <a className=\"login-form-forgot\" href=\"\">\r\n                    Forgot password\r\n            </a>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" loading={loading}>\r\n                    Log in\r\n            </Button>\r\n                <span>Or </span>\r\n                <Link to=\"/register\">\r\n                    register now!\r\n                </Link>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default LoginScreen\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { userRegister } from '../../actions/userActions'\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, LockOutlined, MailOutlined, EyeTwoTone, EyeInvisibleOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport \"../LoginScreen/LoginScreen.scss\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"\r\n\r\n    const state = useSelector(state => state.userRegister);\r\n    const { userInfo, loading, error } = state;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const key = 'updatable'\r\n\r\n    useEffect(() => {\r\n        console.log(userInfo)\r\n        if (userInfo)\r\n            history.push(redirect);\r\n\r\n    }, [history, userInfo])\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(loading)\r\n        if (loading)\r\n            message.loading(\"Registering...\", key)\r\n        else if (loading === false && userInfo)\r\n            message.success({ content: 'Welcome to ProShop!', key, duration: 2 });\r\n        else if (loading === false && error)\r\n            message.error({ content: error, key, duration: 2 });\r\n\r\n    }, [loading])\r\n\r\n    const onFinish = () => {\r\n        dispatch(userRegister(name, email, password))\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your name!',\r\n                    },\r\n                ]}\r\n\r\n            >\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)} placeholder=\"Name\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                    {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Email!',\r\n                    },\r\n                ]}\r\n\r\n            >\r\n                <Input prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"confirmPassword\"\r\n                dependencies={['password']}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please confirm your Password!\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    type=\"password\"\r\n                    placeholder=\"Confrim Password\"\r\n                    iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    Register\r\n            </Button>\r\n                <span>Already have an acount! </span>\r\n                <Link to=\"/login\">\r\n                    login\r\n            </Link>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getUserDetails, updateUserDetails } from '../../actions/userActions'\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, LockOutlined, MailOutlined, EyeTwoTone, EyeInvisibleOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport \"./ProfileScreen.scss\"\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [isSubmit, setIsSubmit] = useState(false)\r\n\r\n    const stateDetails = useSelector(state => state.userDetails);\r\n    const { user } = stateDetails;\r\n\r\n    const stateLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = stateLogin;\r\n\r\n    const stateUpdate = useSelector(state => state.userUpdateProfile);\r\n    const { loading, userInfo: userUpdatedInfo, error } = stateUpdate;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const key = 'updatable'\r\n\r\n    useEffect(() => {\r\n        if (!userInfo)\r\n            history.push(\"/login\");\r\n        else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails(\"profile\"))\r\n            }\r\n            else if (user) {\r\n                console.log(user.name, user.email)\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [userInfo, user])\r\n\r\n    useEffect(() => {\r\n        if (isSubmit) {\r\n            if (loading)\r\n                message.loading(\"Updating..\", key)\r\n            else if (loading === false && userUpdatedInfo)\r\n                message.success({ content: 'Updated Succefully!', key, duration: 2 });\r\n            else if (loading === false && error)\r\n                message.error({ content: error, key, duration: 2 });\r\n        }\r\n    }, [loading])\r\n\r\n    const onFinish = () => {\r\n        dispatch(updateUserDetails({ id: user._id, name, email, password }))\r\n        setIsSubmit(true)\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your name!',\r\n                    },\r\n                ]}\r\n\r\n            >\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)} placeholder=\"Name\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                    {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Email!',\r\n                    },\r\n                ]}\r\n\r\n            >\r\n                <Input prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"confirmPassword\"\r\n                dependencies={['password']}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please confirm your Password!\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    type=\"password\"\r\n                    placeholder=\"Confrim Password\"\r\n                    iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    Update Profile\r\n            </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default ProfileScreen\r\n\r\n","import React from 'react'\r\nimport { Steps } from 'antd';\r\nimport \"./CheckoutSteps.scss\"\r\nconst CheckoutSteps = ({ current }) => {\r\n\r\n    const { Step } = Steps\r\n\r\n    return (\r\n        <Steps current={current} >\r\n            <Step title=\"Shipping Address\" />\r\n            <Step title=\"Payment\" />\r\n            <Step title=\"Place Order\" />\r\n        </Steps>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport \"./ShippingScreen.scss\"\r\nimport { saveShippingAddress } from '../../actions/cartActions';\r\nimport CheckoutSteps from \"../../components/CheckoutSteps/CheckoutSteps\"\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [address, setAddress] = useState(shippingAddress && shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress && shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress && shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress && shippingAddress.country)\r\n\r\n    const onFinish = () => {\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push(\"/payment\")\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps current={0} />\r\n            <Form\r\n                name=\"normal_login\"\r\n                className=\"address-form\"\r\n                onFinish={onFinish}\r\n                initialValues={{\r\n                    address: address ? address : \"\",\r\n                    city: city ? city : \"\",\r\n                    postalCode: postalCode ? postalCode : \"\",\r\n                    country: country ? country : \"\",\r\n                }}\r\n            >\r\n\r\n                <Form.Item\r\n                    name=\"address\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your address!',\r\n                        },\r\n                    ]}\r\n\r\n                >\r\n                    <Input\r\n                        value={address}\r\n                        onChange={(e) => setAddress(e.target.value)} placeholder=\"Address\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"city\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your city!',\r\n                        },\r\n                    ]}\r\n\r\n                >\r\n                    <Input\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)} placeholder=\"City\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"postalCode\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your Postal Code!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input\r\n                        value={postalCode}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                        placeholder=\"Postal Code\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"country\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your Country!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input\r\n                        value={country}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                        placeholder=\"Country\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Continue\r\n                </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShippingScreen\r\n\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Button, Radio } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport \"../ShippingScreen/ShippingScreen.scss\"\r\nimport { savePaymentMethod } from '../../actions/cartActions';\r\nimport CheckoutSteps from \"../../components/CheckoutSteps/CheckoutSteps\"\r\nimport \"./PaymentScreen.scss\"\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) history.push(\"/shipping\")\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState(\"PayPal\")\r\n\r\n    const onChange = e => {\r\n        setPaymentMethod(e.target.value)\r\n    };\r\n\r\n    const onFinish = () => {\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push(\"/placeorder\")\r\n    };\r\n\r\n    const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps current={1} />\r\n            <Form\r\n                name=\"normal_login\"\r\n                className=\"payment-form\"\r\n                onFinish={onFinish}\r\n\r\n            >\r\n                <Form.Item>\r\n                    <Radio.Group onChange={(e) => onChange(e)} value={paymentMethod}>\r\n                        <Radio style={radioStyle} value={\"PayPal\"}>\r\n                            PayPal or Credit Card\r\n                    </Radio>\r\n                        <Radio style={radioStyle} value={\"Other\"} disabled>\r\n                            Other...\r\n                        </Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Continue\r\n                </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShippingScreen\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Row, Col, Divider,List, Avatar, Table, message} from 'antd';\r\nimport { createOrder } from \"../../actions/orderActions\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport \"./PlaceorderScreen.scss\"\r\nimport CheckoutSteps from \"../../components/CheckoutSteps/CheckoutSteps\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PlaceorderScreen = () => {\r\n    const { Column, ColumnGroup } = Table;\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress, paymentMethod, cartItems} = cart;\r\n\r\n    const order = useSelector(state => state.order)\r\n    const {loading, success, error} = order;\r\n\r\n    const addDecimals = (num) => (num).toFixed(2);\r\n        \r\n    const itemsPrice = addDecimals(cartItems.reduce((total,{price, qty}) => total + price * qty,0));\r\n    const shippingPrice = itemsPrice > 100 ? 0 : 100;\r\n    const taxPrice = addDecimals(Number(0.15*itemsPrice));\r\n    const totalPrice = addDecimals(Number(itemsPrice)+Number(shippingPrice)+Number(taxPrice));\r\n\r\n    const dataSource = [\r\n        {\r\n            field: 'Items',\r\n            value: `$${itemsPrice}`,\r\n        },\r\n        {\r\n            field: 'Shipping',\r\n            value: `$${shippingPrice}`,\r\n        },\r\n        {\r\n            field: 'Taxes',\r\n            value: `$${taxPrice}`,\r\n        },\r\n        {\r\n            field: 'Total',\r\n            value: `$${totalPrice}`,\r\n        },\r\n      ];\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cartItems,\r\n            shippingAddress: shippingAddress,\r\n            paymentMethod: paymentMethod,\r\n            itemsPrice: itemsPrice,\r\n            taxPrice: taxPrice,\r\n            shippingPrice: shippingPrice,\r\n            totalPrice: totalPrice\r\n        }))\r\n    }\r\n\r\n    const key = 'updatable'\r\n    \r\n    useEffect(() => {\r\n        console.log(loading)\r\n        if (loading)\r\n            message.loading({content: \"Creating order...\", key})\r\n        else if (loading === false && order.order)\r\n            message.success({ content: 'Order Created!', key, duration: 2 });\r\n        else if (loading === false && error)\r\n            message.error({ content: error, key, duration: 2 });\r\n\r\n    }, [loading,success])\r\n\r\n    return (\r\n        <>\r\n          <CheckoutSteps current={2} />\r\n          <Row className=\"order-details-container\">\r\n            <Col flex={3.5} className=\"order-details\">\r\n                <div>\r\n                    <h2>Shipping Address</h2>\r\n                    <span>{shippingAddress.address} {shippingAddress.city}</span>,\r\n                    <span>{shippingAddress.postalCode}</span>,\r\n                    <span>{shippingAddress.country}</span>\r\n                </div>\r\n                <Divider />\r\n                <div>\r\n                    <h2>Payment Method</h2>\r\n                    <span>Mehtod: {paymentMethod}</span>\r\n                </div>\r\n                <Divider />\r\n                <List\r\n                    header={<h2>Cart Items</h2>}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={cartItems}\r\n                    renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                        avatar={<Avatar size=\"large\" src={item.image} />}\r\n                        title={<Link to={`/product/${item.product}`}>{item.name}</Link>}\r\n                        description={<div>{item.qty} X ${item.price} = ${item.qty*item.price}</div>}\r\n                        />\r\n                    </List.Item>\r\n                    )}\r\n                />\r\n            </Col>\r\n            <Col flex={1.5}>\r\n            <Table dataSource={dataSource} pagination={false} bordered footer={() => \r\n                <Button type=\"primary\" className=\"login-form-button\" onClick={placeOrderHandler}>\r\n                        Place Order\r\n                </Button>}>\r\n                <ColumnGroup title=\"Order Summary\">\r\n                    <Column title=\"Field\" dataIndex=\"field\" key=\"field\" />\r\n                    <Column title=\"Value\" dataIndex=\"value\" key=\"value\" />  \r\n                </ColumnGroup>\r\n            </Table>\r\n            </Col>\r\n            </Row>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceorderScreen\r\n","import axios from \"axios\";\r\n\r\nexport const createOrder = (order) => async (dispatch,getState) => {\r\n  try {\r\n\r\n    dispatch({ type: \"ORDER_CREATE_REQUEST\" });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/api/order\", order, config);\r\n\r\n    dispatch({ type: \"ORDER_CREATE_SUCCESS\", payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"ORDER_CREATE_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.msg\r\n          ? error.response.data.msg\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\"\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProtectedRoute = ({location, component: Component, path, ...rest }) => {\r\n\r\n  const state = useSelector(state => state.userLogin);\r\n  const {userInfo} = state;\r\n  const pathToBeRedirected = path.toString().slice(1);\r\n  \r\n  return (\r\n    <Route {...rest} render={\r\n      props => {\r\n        if (userInfo) {\r\n          return <Component {...rest} {...props} />\r\n        } else {\r\n          return <Redirect to={\r\n            {\r\n              pathname: '/login',\r\n              search: `?redirect=${pathToBeRedirected}`,\r\n              state: {\r\n                from: props.location\r\n              }\r\n            }\r\n          } />\r\n        }\r\n      }\r\n    } />\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen/PaymentScreen\";\r\nimport PlaceorderScreen from \"./screens/PlaceorderScreen/PlaceorderScreen\";\r\n\r\nimport ProtectedRoute from \"./utils/ProtectedRoute\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Header />\r\n        <div className=\"app-screens\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomeScreen} />\r\n            <Route path=\"/product/:id\" component={ProductScreen} />\r\n            <Route path=\"/cart/:id?\" component={CartScreen} />\r\n            <Route path=\"/login\" component={LoginScreen} />\r\n            <Route path=\"/register\" component={RegisterScreen} />\r\n            <ProtectedRoute path=\"/profile\" component={ProfileScreen} />\r\n            <ProtectedRoute path=\"/shipping\" component={ShippingScreen} />\r\n            <ProtectedRoute path=\"/payment\" component={PaymentScreen} />\r\n            <ProtectedRoute path=\"/placeorder\" component={PlaceorderScreen} />\r\n          </Switch>\r\n        </div>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducers,\r\n  productDetailsReducers,\r\n} from \"./reducers/productReducers\";\r\nimport { cartItemsReducers } from \"./reducers/cartReducers\";\r\nimport { orderReducers } from \"./reducers/orderReducers\";\r\nimport {\r\n  userLoginReducers,\r\n  userRegisterReducers,\r\n  userDetailsReducers,\r\n  updateUserReducers,\r\n} from \"./reducers/userReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducers,\r\n  productDetails: productDetailsReducers,\r\n  cart: cartItemsReducers,\r\n  order: orderReducers,\r\n  userLogin: userLoginReducers,\r\n  userRegister: userRegisterReducers,\r\n  userDetails: userDetailsReducers,\r\n  userUpdateProfile: updateUserReducers,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : null;\r\n\r\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\")\r\n  ? JSON.parse(localStorage.getItem(\"paymentMethod\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n    paymentMethod: paymentMethodFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","export const productListReducers = (state = { loading: true,products: [] }, action) => {\r\n  switch (action.type) {\r\n    case \"PRODUCT_LIST_REQUEST\":\r\n      return { loading: true, products: [] };\r\n    case \"PRODUCT_LIST_SUCCESS\":\r\n      return { loading: false, products: action.payload };\r\n    case \"PRODUCT_LIST_FAIL\":\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducers = (\r\n  state = { product: { loading: true,reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"PRODUCT_DETAILS_REQUEST\":\r\n      return { loading: true, product: {} };\r\n    case \"PRODUCT_DETAILS_SUCCESS\":\r\n      return { loading: false, product: action.payload };\r\n    case \"PRODUCT_DETAILS_FAIL\":\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const cartItemsReducers = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"CART_ADD_ITEM\":\r\n      const tempItem = action.payload;\r\n      const existItem = state.cartItems.find(\r\n        (item) => item.product === tempItem.product\r\n      );\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((item) =>\r\n            item.product === tempItem.product ? tempItem : item\r\n          ),\r\n        };\r\n      } else {\r\n        return { ...state, cartItems: [...state.cartItems, tempItem] };\r\n      }\r\n    case \"CART_REMOVE_ITEM\":\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          (item) => item.product !== action.payload\r\n        ),\r\n      };\r\n    case \"CART_SAVE_SHIPPING_ADDRESS\":\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n    case \"CART_SAVE_PAYMENT_METHOD\":\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const orderReducers = (\r\n  state = {},\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"ORDER_CREATE_REQUEST\":\r\n      return {\r\n        loading: true   \r\n      };\r\n    case \"ORDER_CREATE_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        order: action.payload\r\n      };\r\n    case \"ORDER_CREATE_FAIL\":\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const userLoginReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"USER_LOGIN_REQUEST\":\r\n      return { loading: true, userInfo: null };\r\n    case \"USER_LOGIN_SUCCESS\":\r\n      return { loading: false, userInfo: action.payload };\r\n    case \"USER_LOGIN_FAIL\":\r\n      return { loading: false, error: action.payload };\r\n    case \"USER_LOGOUT\":\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"USER_REGISTER_REQUEST\":\r\n      return { loading: true, userInfo: null };\r\n    case \"USER_REGISTER_SUCCESS\":\r\n      return { loading: false, userInfo: action.payload };\r\n    case \"USER_REGISTER_FAIL\":\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducers = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case \"USER_DETAILS_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"USER_DETAILS_SUCCESS\":\r\n      return { loading: false, user: action.payload };\r\n    case \"USER_DETAILS_FAIL\":\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const updateUserReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"USER_UPDATE_REQUEST\":\r\n      return { loading: true };\r\n    case \"USER_UPDATE_SUCCESS\":\r\n      return { loading: false, userInfo: action.payload };\r\n    case \"USER_UPDATE_FAIL\":\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}